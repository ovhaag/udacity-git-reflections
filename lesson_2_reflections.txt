# Udacity "How to Use Git and GitHub"
# Lesson 2 reflexctions

## What happens when you initialize a repository? 
## Why do you need to do it?

- A .git directory is created (will store/track information an my changes/commits)
- If I want to track my changes (commits), I need to start the tracking

## How is the staging area different from the working directory and the repository?
## What value do you think it offers?

- The **working directory** contains the current files with their current content
- The **staging area** contains the only the staged files 
  with the content they had at the moment they were added.
  Theese files will be committed as staged.
- The **repository** contains the committed files 
  with their staging content at commit time,
  i.e. the history of the files up to the last commit.

value

- I can decide which files I want to commit
- I have some control on the state of the files I want to commit

How can you use the staging area to make sure you have one commit per logical
change?

- include files in staging area when they belong to the logical change
- exclude files from staging area when they don't belong to the logical change

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
